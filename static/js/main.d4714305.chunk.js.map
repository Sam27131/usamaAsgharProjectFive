{"version":3,"sources":["assets/Amajor.png","assets/Bmajor.png","assets/Cmajor.png","assets/Dmajor.png","assets/Emajor.png","assets/Fmajor.png","assets/Gmajor.png","assets/Aminor.png","assets/Bminor.png","assets/Cminor.png","assets/Dminor.png","assets/Eminor.png","assets/Fminor.png","assets/Gminor.png","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","toggleAmajChord","setState","showAmajChord","state","toggleBmajChord","showBmajChord","toggleCmajChord","showCmajChord","toggleDmajChord","showDmajChord","toggleEmajChord","showEmajChord","toggleFmajChord","showFmajChord","toggleGmajChord","showGmajChord","toggleAminChord","showAminChord","toggleBminChord","showBminChord","toggleCminChord","showCminChord","toggleDminChord","showDminChord","toggleEminChord","showEminChord","toggleFminChord","showFminChord","toggleGminChord","showGminChord","database","ref","on","response","console","log","val","newState","chordsCollection","key","push","chords","className","onClick","this","src","image1","alt","image2","image3","image4","image5","image6","image7","image8","image9","image10","image11","image12","image13","image14","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d4714305.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Amajor.5b6b7115.png\";","module.exports = __webpack_public_path__ + \"static/media/Bmajor.f16d4596.png\";","module.exports = __webpack_public_path__ + \"static/media/Cmajor.2a09cb5c.png\";","module.exports = __webpack_public_path__ + \"static/media/Dmajor.d2b707b4.png\";","module.exports = __webpack_public_path__ + \"static/media/Emajor.d9d6d531.png\";","module.exports = __webpack_public_path__ + \"static/media/Fmajor.2802def6.png\";","module.exports = __webpack_public_path__ + \"static/media/Gmajor.2e3cd4af.png\";","module.exports = __webpack_public_path__ + \"static/media/Aminor.fe45fa68.png\";","module.exports = __webpack_public_path__ + \"static/media/Bminor.c4a2debb.png\";","module.exports = __webpack_public_path__ + \"static/media/Cminor.15802b9a.png\";","module.exports = __webpack_public_path__ + \"static/media/Dminor.dd9b0cbd.png\";","module.exports = __webpack_public_path__ + \"static/media/Eminor.ff1a318c.png\";","module.exports = __webpack_public_path__ + \"static/media/Fminor.3bbff0d4.png\";","module.exports = __webpack_public_path__ + \"static/media/Gminor.30f7b597.png\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAcR11MhGx4_OleQ-brP_CJpMFnxhqcjV8\",\n    authDomain: \"guitar-chords-app-fef40.firebaseapp.com\",\n    databaseURL: \"https://guitar-chords-app-fef40.firebaseio.com\",\n    projectId: \"guitar-chords-app-fef40\",\n    storageBucket: \"guitar-chords-app-fef40.appspot.com\",\n    messagingSenderId: \"702433788465\",\n    appId: \"1:702433788465:web:5755f322eb9ccfd4388b10\"\n};\n\n// Initializing Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// Exporting the CONFIGURED version of firebase\nexport default firebase;\n","import React, { Component } from 'react';\nimport firebase from './firebase'\nimport './App.css';\nimport image1 from './assets/Amajor.png'\nimport image2 from './assets/Bmajor.png'\nimport image3 from './assets/Cmajor.png'\nimport image4 from './assets/Dmajor.png'\nimport image5 from './assets/Emajor.png'\nimport image6 from './assets/Fmajor.png'\nimport image7 from './assets/Gmajor.png'\nimport image8 from './assets/Aminor.png'\nimport image9 from './assets/Bminor.png'\nimport image10 from './assets/Cminor.png'\nimport image11 from './assets/Dminor.png'\nimport image12 from './assets/Eminor.png'\nimport image13 from './assets/Fminor.png'\nimport image14 from './assets/Gminor.png'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      // Setting the property showChordImage to false to be used later in conditional rendering\n      // This will ensure that no image shows up when the app is loaded\n      showAmajChord: false,\n      showBmajChord: false,\n      showCmajChord: false,\n      showDmajChord: false,\n      showEmajChord: false,\n      showFmajChord: false,\n      showGmajChord: false,\n      showAminChord: false,\n      showBminChord: false,\n      showCminChord: false,\n      showDminChord: false,\n      showEminChord: false,\n      showFminChord: false,\n      showGminChord: false,\n    }\n  }\n\n  componentDidMount() {\n    // Creating a variable that holds a reference to the firebase database\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (response) => {\n      console.log(response.val());\n      \n      // A variable that will store the new state\n      const newState = [];\n\n      // Storing the response value from firebase into a new variable\n      const chordsCollection = response.val();\n\n      // The for loop here is used to turn the object chordsCollection into an array\n      // 'Key' here is used to represent the index of each entry in the object\n      for (let key in chordsCollection) {\n\n        // Using the .push method to push the values from the object chordsCollection into the empty array newState\n        newState.push(chordsCollection[key]);\n      }\n\n      // then, we call this.setState in order to update our component's state using the local array newState\n      this.setState({\n        chords: newState\n      });\n\n      console.log(newState);\n    });\n  }\n\n  // Functions to be applied to the buttons that will change the states to be true on button click and then false again on the next click\n  toggleAmajChord = () => {\n    this.setState({\n      showAmajChord: !this.state.showAmajChord\n    })\n  }\n\n  toggleBmajChord = () => {\n    this.setState({\n      showBmajChord: !this.state.showBmajChord\n    })\n  }\n\n  toggleCmajChord = () => {\n    this.setState({\n      showCmajChord: !this.state.showCmajChord\n    })\n  }\n\n  toggleDmajChord = () => {\n    this.setState({\n      showDmajChord: !this.state.showDmajChord\n    })\n  }\n\n  toggleEmajChord = () => {\n    this.setState({\n      showEmajChord: !this.state.showEmajChord\n    })\n  }\n\n  toggleFmajChord = () => {\n    this.setState({\n      showFmajChord: !this.state.showFmajChord\n    })\n  }\n\n  toggleGmajChord = () => {\n    this.setState({\n      showGmajChord: !this.state.showGmajChord\n    })\n  }\n\n  toggleAminChord = () => {\n    this.setState({\n      showAminChord: !this.state.showAminChord\n    })\n  }\n\n  toggleBminChord = () => {\n    this.setState({\n      showBminChord: !this.state.showBminChord\n    })\n  }\n\n  toggleCminChord = () => {\n    this.setState({\n      showCminChord: !this.state.showCminChord\n    })\n  }\n\n  toggleDminChord = () => {\n    this.setState({\n      showDminChord: !this.state.showDminChord\n    })\n  }\n\n  toggleEminChord = () => {\n    this.setState({\n      showEminChord: !this.state.showEminChord\n    })\n  }\n\n  toggleFminChord = () => {\n    this.setState({\n      showFminChord: !this.state.showFminChord\n    })\n  }\n\n  toggleGminChord = () => {\n    this.setState({\n      showGminChord: !this.state.showGminChord\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App wrapper\">\n        <div className=\"infoContainer\">\n          <h1>learn how to play all the major and minor guitar chords</h1>\n          <h2>click any button below to see a picture of how to play that chord</h2>\n        </div>\n        <p>click a button once to see the picture and click it again to remove it from the screen</p>\n        <div className=\"buttons\">\n          <button onClick={this.toggleAmajChord}>A Major</button>\n          <button onClick={this.toggleBmajChord}>B Major</button>\n          <button onClick={this.toggleCmajChord}>C Major</button>\n          <button onClick={this.toggleDmajChord}>D Major</button>\n          <button onClick={this.toggleEmajChord}>E Major</button>\n          <button onClick={this.toggleFmajChord}>F Major</button>\n          <button onClick={this.toggleGmajChord}>G Major</button>\n          <button onClick={this.toggleAminChord}>A minor</button>\n          <button onClick={this.toggleBminChord}>B minor</button>\n          <button onClick={this.toggleCminChord}>C minor</button>\n          <button onClick={this.toggleDminChord}>D minor</button>\n          <button onClick={this.toggleEminChord}>E minor</button>\n          <button onClick={this.toggleFminChord}>F minor</button>\n          <button onClick={this.toggleGminChord}>G minor</button>\n        </div>\n        <div className=\"chordImages\">\n          {/*\n          A ternary conditional statement that checks the boolean status of this.state.showChord\n          When true, it will add an img tag to the DOM \n\n          Referenced code from following website: https://www.quora.com/Using-React-what-is-the-best-way-to-show-and-hide-an-image\n          Credit goes to users: Tobias Zucali and Robin Wieruch\n          */}\n          { this.state.showAmajChord ? (<img src={image1} alt=\"The fingering pattern of the A major Chord\"/>) : null }\n          { this.state.showBmajChord ? (<img src={image2} alt=\"The fingering pattern of the B major Chord\"/>) : null }\n          { this.state.showCmajChord ? (<img src={image3} alt=\"The fingering pattern of the C major Chord\"/>) : null }\n          { this.state.showDmajChord ? (<img src={image4} alt=\"The fingering pattern of the D major Chord\"/>) : null }\n          { this.state.showEmajChord ? (<img src={image5} alt=\"The fingering pattern of the E major Chord\"/>) : null }\n          { this.state.showFmajChord ? (<img src={image6} alt=\"The fingering pattern of the F major Chord\"/>) : null }\n          { this.state.showGmajChord ? (<img src={image7} alt=\"The fingering pattern of the G major Chord\"/>) : null }\n          { this.state.showAminChord ? (<img src={image8} alt=\"The fingering pattern of the A minor Chord\"/>) : null }\n          { this.state.showBminChord ? (<img src={image9} alt=\"The fingering pattern of the B minor Chord\"/>) : null }\n          { this.state.showCminChord ? (<img src={image10} alt=\"The fingering pattern of the C minor Chord\"/>) : null }\n          { this.state.showDminChord ? (<img src={image11} alt=\"The fingering pattern of the D minor Chord\"/>) : null }\n          { this.state.showEminChord ? (<img src={image12} alt=\"The fingering pattern of the E minor Chord\"/>) : null }\n          { this.state.showFminChord ? (<img src={image13} alt=\"The fingering pattern of the F minor Chord\"/>) : null }\n          { this.state.showGminChord ? (<img src={image14} alt=\"The fingering pattern of the G minor Chord\"/>) : null }\n        </div>\n        <footer>\n        <p><span>&#169;</span> Copyright 2020 Usama Asghar <br/> All Rights Reserved.</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}